üéØ SPRINT FINAL: √öLTIMAS TABLAS PARA 100%
=========================================

üìä PROGRESO ACTUAL:
- Migradas: ~22 tablas
- Restantes: ~13 tablas
- Progreso: ~63% completado

üöÄ COMANDO FINAL ABSOLUTO:

-- ===============================================
-- √öLTIMAS 13 TABLAS PARA MIGRACI√ìN 100% COMPLETA
-- ===============================================

CREATE TABLE IF NOT EXISTS revisiones_libros (
    id INTEGER NOT NULL PRIMARY KEY,
    libro_id INTEGER,
    revisor_id INTEGER,
    calificacion INTEGER,
    comentarios TEXT,
    estado VARCHAR(50),
    fecha_revision TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS descargas (
    id INTEGER NOT NULL PRIMARY KEY,
    usuario_id INTEGER,
    libro_id INTEGER,
    fecha_descarga TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ip_address VARCHAR(45),
    formato VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS campana_compartidas (
    id INTEGER NOT NULL PRIMARY KEY,
    campana_id INTEGER,
    usuario_compartido_id INTEGER,
    fecha_compartida TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    permisos VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS campanas_compartidas_admin (
    id INTEGER NOT NULL PRIMARY KEY,
    campana_id INTEGER,
    admin_id INTEGER,
    usuario_objetivo_id INTEGER,
    fecha_compartida TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    activa BOOLEAN DEFAULT true
);

CREATE TABLE IF NOT EXISTS campana_distribucion (
    id INTEGER NOT NULL PRIMARY KEY,
    campana_id INTEGER,
    canal VARCHAR(100),
    parametros TEXT,
    estado VARCHAR(50),
    fecha_programada TIMESTAMP,
    fecha_ejecutada TIMESTAMP
);

CREATE TABLE IF NOT EXISTS campana_envios (
    id INTEGER NOT NULL PRIMARY KEY,
    campana_id INTEGER,
    usuario_id INTEGER,
    email VARCHAR(255),
    estado VARCHAR(50),
    fecha_envio TIMESTAMP,
    fecha_apertura TIMESTAMP,
    fecha_click TIMESTAMP
);

CREATE TABLE IF NOT EXISTS campana_tracking (
    id INTEGER NOT NULL PRIMARY KEY,
    campana_id INTEGER,
    usuario_id INTEGER,
    accion VARCHAR(100),
    valor VARCHAR(255),
    fecha_accion TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS campanas_libros (
    id INTEGER NOT NULL PRIMARY KEY,
    campana_id INTEGER,
    libro_id INTEGER,
    precio_especial DECIMAL(10,2),
    descuento DECIMAL(5,2),
    fecha_inicio TIMESTAMP,
    fecha_fin TIMESTAMP
);

CREATE TABLE IF NOT EXISTS email_logs (
    id INTEGER NOT NULL PRIMARY KEY,
    destinatario VARCHAR(255),
    asunto VARCHAR(255),
    mensaje TEXT,
    estado VARCHAR(50),
    fecha_envio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    respuesta_servidor TEXT
);

CREATE TABLE IF NOT EXISTS log_actividad (
    id INTEGER NOT NULL PRIMARY KEY,
    usuario_id INTEGER,
    accion VARCHAR(255),
    tabla_afectada VARCHAR(100),
    registro_id INTEGER,
    datos_anteriores TEXT,
    datos_nuevos TEXT,
    ip_address VARCHAR(45),
    fecha_accion TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS notificaciones_escritores (
    id INTEGER NOT NULL PRIMARY KEY,
    escritor_id INTEGER,
    tipo VARCHAR(100),
    titulo VARCHAR(255),
    mensaje TEXT,
    leida BOOLEAN DEFAULT false,
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS usuario_configuracion_notificaciones (
    id INTEGER NOT NULL PRIMARY KEY,
    usuario_id INTEGER,
    tipo_notificacion VARCHAR(100),
    activa BOOLEAN DEFAULT true,
    medio VARCHAR(50),
    configuracion TEXT
);

CREATE TABLE IF NOT EXISTS pagos_comisiones (
    id INTEGER NOT NULL PRIMARY KEY,
    comision_id INTEGER,
    monto DECIMAL(12,2),
    metodo_pago VARCHAR(50),
    referencia_pago VARCHAR(255),
    estado VARCHAR(50) DEFAULT 'pendiente',
    fecha_pago TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ===============================================
-- VERIFICACI√ìN TOTAL DE SISTEMA
-- ===============================================

SELECT 'MIGRACI√ìN COMPLETA' as estado, COUNT(*) as total_tablas FROM information_schema.tables WHERE table_schema = 'public';

-- VERIFICAR TABLAS ESPEC√çFICAS
SELECT 'revisiones_libros' as tabla, COUNT(*) as registros FROM revisiones_libros
UNION ALL SELECT 'descargas', COUNT(*) FROM descargas
UNION ALL SELECT 'campana_compartidas', COUNT(*) FROM campana_compartidas
UNION ALL SELECT 'email_logs', COUNT(*) FROM email_logs
UNION ALL SELECT 'notificaciones_escritores', COUNT(*) FROM notificaciones_escritores;

üéØ DESPU√âS DE EJECUTAR:
üéâ ¬°MIGRACI√ìN 100% COMPLETA!
üéâ ¬°TODAS LAS 35 TABLAS MIGRADAS!
üéâ ¬°SISTEMA PUBLIERY COMPLETO EN SUPABASE!